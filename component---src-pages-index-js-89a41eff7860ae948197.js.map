{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","IndexPage","a","createElement","title","keywords","className","href","target","rel","icon","faLinkedinIn","size","faGithub","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAyCeS,UApCG,kBAChBL,EAAAM,EAAAC,cAACR,EAAA,SAAD,KACEC,EAAAM,EAAAC,cAACH,EAAA,EAAD,CACEI,MAAM,2BACNC,SAAU,oDAEZT,EAAAM,EAAAC,cAAA,eACEP,EAAAM,EAAAC,cAAA,mBACAP,EAAAM,EAAAC,cAAA,sFAIAP,EAAAM,EAAAC,cAAA,OAAKG,UAAU,SACbV,EAAAM,EAAAC,cAAA,KACEI,KAAK,qDACLC,OAAO,SACPC,IAAI,uBAEJb,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAiBY,KAAMC,IAAcC,KAAK,QAE5ChB,EAAAM,EAAAC,cAAA,KACEI,KAAK,iCACLC,OAAO,SACPC,IAAI,uBAEJb,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAiBY,KAAMG,IAAUD,KAAK,UAI5ChB,EAAAM,EAAAC,cAAA,eACEP,EAAAM,EAAAC,cAAA,uBACAP,EAAAM,EAAAC,cAAA,kLCxBN,SAASW,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMb,EAAmBU,EAAnBV,SAAUD,EAASW,EAATX,MACxCe,EADiDC,EAAAC,KACjDF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAtB,EAAAC,cAACsB,EAAAvB,EAAD,CACEwB,eAAgB,CACdT,QAEFb,MAAOA,EACPuB,cAAa,QAAUR,EAAKI,aAAanB,MACzCc,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASzB,GAEX,CACE0B,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASzB,GAEX,CACEwB,KAAI,sBACJC,QAASP,IAGVU,OACC3B,EAAS4B,OAAS,EACd,CACEL,KAAI,WACJC,QAASxB,EAAS6B,KAAT,OAEX,IAELF,OAAOd,KAKhBJ,EAAIqB,aAAe,CACjBlB,KAAI,KACJC,KAAM,GACNb,SAAU,GACVW,YAAW,IAGbF,EAAIsB,UAAY,CACdpB,YAAaqB,IAAUC,OACvBrB,KAAMoB,IAAUC,OAChBpB,KAAMmB,IAAUE,QAAQF,IAAUG,QAClCnC,SAAUgC,IAAUE,QAAQF,IAAUC,QACtClC,MAAOiC,IAAUC,OAAOG,YAGX3B","file":"component---src-pages-index-js-89a41eff7860ae948197.js","sourcesContent":["import React, { Fragment } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLinkedinIn, faGithub } from '@fortawesome/free-brands-svg-icons'\nimport SEO from '../components/seo'\n\nconst IndexPage = () => (\n  <Fragment>\n    <SEO\n      title='Sean Gibbens Development'\n      keywords={[`sean`, `gibbens`, `development`, `gatsby`, `react`]}\n    />\n    <section>\n      <h1>Hello</h1>\n      <p>\n        My name is Sean Gibbens. I am a developer based in Indianapolis,\n        Indiana.\n      </p>\n      <div className='links'>\n        <a\n          href='https://www.linkedin.com/in/sean-gibbens-48723099/'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <FontAwesomeIcon icon={faLinkedinIn} size='3x' />\n        </a>\n        <a\n          href='https://github.com/seangibbens'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <FontAwesomeIcon icon={faGithub} size='3x' />\n        </a>\n      </div>\n    </section>\n    <section>\n      <h1>Got work?</h1>\n      <p>For development inquiries, please email seangibbensdev@gmail.com.</p>\n    </section>\n  </Fragment>\n)\n\nexport default IndexPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}